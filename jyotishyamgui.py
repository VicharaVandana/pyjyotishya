#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jan 26, 2023 12:20:23 AM IST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

from gui_subwindows import *
from guiInterface import *

_script = sys.argv[0]
_location = os.path.dirname(_script)

import jyotishyamgui_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1103x755+193+127")
        top.minsize(140, 1)
        top.maxsize(3844, 1057)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.combobox = tk.StringVar()

        self.AppLabel = tk.Label(self.top)
        self.AppLabel.place(relx=0.009, rely=0.012, height=42, width=1084)
        self.AppLabel.configure(activebackground="#f9f9f9")
        self.AppLabel.configure(anchor='w')
        self.AppLabel.configure(background="#d14198")
        self.AppLabel.configure(compound='center')
        self.AppLabel.configure(disabledforeground="#a3a3a3")
        self.AppLabel.configure(font="-family {Cooper Black} -size 14 -underline 1")
        self.AppLabel.configure(foreground="#000000")
        self.AppLabel.configure(highlightbackground="#d9d9d9")
        self.AppLabel.configure(highlightcolor="#5327eb")
        self.AppLabel.configure(text='''    jyotiSHYAMitra App by Shyam Bhat     ''')
        _style_code()
        self.BirthData = ttk.Labelframe(self.top)
        self.BirthData.place(relx=0.009, rely=0.083, relheight=0.391
                , relwidth=0.535)
        self.BirthData.configure(relief='ridge')
        self.BirthData.configure(text='''Birth Details''')
        self.BirthData.configure(relief="ridge")
        self.LBL_Name = tk.Label(self.BirthData)
        self.LBL_Name.place(relx=0.036, rely=0.098, height=25, width=76
                , bordermode='ignore')
        self.LBL_Name.configure(activebackground="#f9f9f9")
        self.LBL_Name.configure(anchor='w')
        self.LBL_Name.configure(background="#d9d9d9")
        self.LBL_Name.configure(compound='left')
        self.LBL_Name.configure(disabledforeground="#a3a3a3")
        self.LBL_Name.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_Name.configure(foreground="#000000")
        self.LBL_Name.configure(highlightbackground="#d9d9d9")
        self.LBL_Name.configure(highlightcolor="black")
        self.LBL_Name.configure(text='''Name :''')
        self.cmbName = ttk.Combobox(self.BirthData)
        self.cmbName.place(relx=0.169, rely=0.085, relheight=0.115
                , relwidth=0.439, bordermode='ignore')
        self.cmbName.configure(font="-family {Comic Sans MS} -size 12")
        self.cmbName.configure(textvariable=self.combobox)
        self.cmbName.configure(takefocus="")
        self.cmbName_tooltip = \
        ToolTip(self.cmbName, '''Either type new name or select name of existing userdata''')

        self.LBL_birthday = tk.Label(self.BirthData)
        self.LBL_birthday.place(relx=0.036, rely=0.231, height=25, width=108
                , bordermode='ignore')
        self.LBL_birthday.configure(activebackground="#f9f9f9")
        self.LBL_birthday.configure(anchor='w')
        self.LBL_birthday.configure(background="#d9d9d9")
        self.LBL_birthday.configure(compound='left')
        self.LBL_birthday.configure(disabledforeground="#a3a3a3")
        self.LBL_birthday.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_birthday.configure(foreground="#000000")
        self.LBL_birthday.configure(highlightbackground="#d9d9d9")
        self.LBL_birthday.configure(highlightcolor="black")
        self.LBL_birthday.configure(text='''Birthday :''')
        self.dd = ttk.Entry(self.BirthData)
        self.dd.place(relx=0.214, rely=0.231, relheight=0.088, relwidth=0.061
                , bordermode='ignore')
        self.dd.configure(font="-family {Gadugi} -size 12")
        self.dd.configure(takefocus="")
        self.dd.configure(cursor="ibeam")
        self.dd_tooltip = \
        ToolTip(self.dd, '''Day as DD''')

        self.TLabel1 = ttk.Label(self.BirthData)
        self.TLabel1.place(relx=0.41, rely=0.231, height=23, width=27
                , bordermode='ignore')
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="-family {MS Gothic} -size 20")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='w')
        self.TLabel1.configure(justify='left')
        self.TLabel1.configure(text='''/''')
        self.TLabel1.configure(compound='left')
        self.mm = ttk.Entry(self.BirthData)
        self.mm.place(relx=0.339, rely=0.231, relheight=0.088, relwidth=0.061
                , bordermode='ignore')
        self.mm.configure(font="-family {Gadugi} -size 12")
        self.mm.configure(takefocus="")
        self.mm.configure(cursor="ibeam")
        self.mm_tooltip = \
        ToolTip(self.mm, '''month as MM''')

        self.TLabel1_1 = ttk.Label(self.BirthData)
        self.TLabel1_1.place(relx=0.285, rely=0.231, height=23, width=27
                , bordermode='ignore')
        self.TLabel1_1.configure(background="#d9d9d9")
        self.TLabel1_1.configure(foreground="#000000")
        self.TLabel1_1.configure(font="-family {MS Gothic} -size 20")
        self.TLabel1_1.configure(relief="flat")
        self.TLabel1_1.configure(anchor='w')
        self.TLabel1_1.configure(justify='left')
        self.TLabel1_1.configure(text='''/''')
        self.TLabel1_1.configure(compound='left')
        self.yyyy = ttk.Entry(self.BirthData)
        self.yyyy.place(relx=0.481, rely=0.231, relheight=0.088, relwidth=0.129
                , bordermode='ignore')
        self.yyyy.configure(font="-family {Gadugi} -size 12")
        self.yyyy.configure(takefocus="")
        self.yyyy.configure(cursor="ibeam")
        self.yyyy_tooltip = \
        ToolTip(self.yyyy, '''year as YYYY''')

        self.LBL_birthtime = tk.Label(self.BirthData)
        self.LBL_birthtime.place(relx=0.036, rely=0.353, height=25, width=118
                , bordermode='ignore')
        self.LBL_birthtime.configure(activebackground="#f9f9f9")
        self.LBL_birthtime.configure(anchor='w')
        self.LBL_birthtime.configure(background="#d9d9d9")
        self.LBL_birthtime.configure(compound='left')
        self.LBL_birthtime.configure(disabledforeground="#a3a3a3")
        self.LBL_birthtime.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_birthtime.configure(foreground="#000000")
        self.LBL_birthtime.configure(highlightbackground="#d9d9d9")
        self.LBL_birthtime.configure(highlightcolor="black")
        self.LBL_birthtime.configure(text='''Birthtime :''')
        self.TLabel1_1_1 = ttk.Label(self.BirthData)
        self.TLabel1_1_1.place(relx=0.315, rely=0.359, height=24, width=18
                , bordermode='ignore')
        self.TLabel1_1_1.configure(background="#d9d9d9")
        self.TLabel1_1_1.configure(foreground="#000000")
        self.TLabel1_1_1.configure(font="-family {MS Gothic} -size 16")
        self.TLabel1_1_1.configure(relief="flat")
        self.TLabel1_1_1.configure(anchor='w')
        self.TLabel1_1_1.configure(justify='left')
        self.TLabel1_1_1.configure(text=''':''')
        self.TLabel1_1_1.configure(compound='left')
        self.mn = ttk.Entry(self.BirthData)
        self.mn.place(relx=0.358, rely=0.359, relheight=0.088, relwidth=0.063
                , bordermode='ignore')
        self.mn.configure(font="-family {Gadugi} -size 12")
        self.mn.configure(takefocus="")
        self.mn.configure(cursor="fleur")
        self.mn_tooltip = \
        ToolTip(self.mn, '''minute in mm format''')

        self.hh = ttk.Entry(self.BirthData)
        self.hh.place(relx=0.232, rely=0.359, relheight=0.088, relwidth=0.064
                , bordermode='ignore')
        self.hh.configure(font="-family {Gadugi} -size 12")
        self.hh.configure(takefocus="")
        self.hh.configure(cursor="ibeam")
        self.hh_tooltip = \
        ToolTip(self.hh, '''time[24hr format] hh''')

        self.TLabel1_1_1_1 = ttk.Label(self.BirthData)
        self.TLabel1_1_1_1.place(relx=0.441, rely=0.359, height=24, width=17
                , bordermode='ignore')
        self.TLabel1_1_1_1.configure(background="#d9d9d9")
        self.TLabel1_1_1_1.configure(foreground="#000000")
        self.TLabel1_1_1_1.configure(font="-family {MS Gothic} -size 16")
        self.TLabel1_1_1_1.configure(relief="flat")
        self.TLabel1_1_1_1.configure(anchor='w')
        self.TLabel1_1_1_1.configure(justify='left')
        self.TLabel1_1_1_1.configure(text=''':''')
        self.TLabel1_1_1_1.configure(compound='left')
        self.ss = ttk.Entry(self.BirthData)
        self.ss.place(relx=0.481, rely=0.359, relheight=0.088, relwidth=0.064
                , bordermode='ignore')
        self.ss.configure(font="-family {Gadugi} -size 12")
        self.ss.configure(takefocus="")
        self.ss.configure(cursor="fleur")
        self.ss_tooltip = \
        ToolTip(self.ss, '''seconds in ss format''')

        self.LBL_birthplace = tk.Label(self.BirthData)
        self.LBL_birthplace.place(relx=0.032, rely=0.492, height=26, width=110
                , bordermode='ignore')
        self.LBL_birthplace.configure(activebackground="#f9f9f9")
        self.LBL_birthplace.configure(anchor='w')
        self.LBL_birthplace.configure(background="#d9d9d9")
        self.LBL_birthplace.configure(compound='left')
        self.LBL_birthplace.configure(disabledforeground="#a3a3a3")
        self.LBL_birthplace.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_birthplace.configure(foreground="#000000")
        self.LBL_birthplace.configure(highlightbackground="#d9d9d9")
        self.LBL_birthplace.configure(highlightcolor="black")
        self.LBL_birthplace.configure(text='''Birthplace :''')
        self.LBL_lattitude = tk.Label(self.BirthData)
        self.LBL_lattitude.place(relx=0.358, rely=0.59, height=25, width=107
                , bordermode='ignore')
        self.LBL_lattitude.configure(activebackground="#f9f9f9")
        self.LBL_lattitude.configure(anchor='w')
        self.LBL_lattitude.configure(background="#d9d9d9")
        self.LBL_lattitude.configure(compound='left')
        self.LBL_lattitude.configure(disabledforeground="#a3a3a3")
        self.LBL_lattitude.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_lattitude.configure(foreground="#000000")
        self.LBL_lattitude.configure(highlightbackground="#d9d9d9")
        self.LBL_lattitude.configure(highlightcolor="black")
        self.LBL_lattitude.configure(text='''Longitude :''')
        self.lat = ttk.Entry(self.BirthData)
        self.lat.place(relx=0.553, rely=0.59, relheight=0.085, relwidth=0.136
                , bordermode='ignore')
        self.lat.configure(font="-family {Gadugi} -size 12")
        self.lat.configure(takefocus="")
        self.lat.configure(cursor="ibeam")
        self.lat_tooltip = \
        ToolTip(self.lat, '''In degrees(+ve for E and -ve for W)''')

        self.LBL_lattitude_1 = tk.Label(self.BirthData)
        self.LBL_lattitude_1.place(relx=0.344, rely=0.688, height=25, width=118
                , bordermode='ignore')
        self.LBL_lattitude_1.configure(activebackground="#f9f9f9")
        self.LBL_lattitude_1.configure(anchor='w')
        self.LBL_lattitude_1.configure(background="#d9d9d9")
        self.LBL_lattitude_1.configure(compound='left')
        self.LBL_lattitude_1.configure(disabledforeground="#a3a3a3")
        self.LBL_lattitude_1.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_lattitude_1.configure(foreground="#000000")
        self.LBL_lattitude_1.configure(highlightbackground="#d9d9d9")
        self.LBL_lattitude_1.configure(highlightcolor="black")
        self.LBL_lattitude_1.configure(text='''Lattitude :''')
        self.lon = ttk.Entry(self.BirthData)
        self.lon.place(relx=0.553, rely=0.688, relheight=0.085, relwidth=0.136
                , bordermode='ignore')
        self.lon.configure(font="-family {Gadugi} -size 12")
        self.lon.configure(takefocus="")
        self.lon.configure(cursor="ibeam")
        self.lon_tooltip = \
        ToolTip(self.lon, '''In degrees(+ve for N and -ve for S)''')

        self.LBL_timezone = tk.Label(self.BirthData)
        self.LBL_timezone.place(relx=0.246, rely=0.769, height=25, width=171
                , bordermode='ignore')
        self.LBL_timezone.configure(activebackground="#f9f9f9")
        self.LBL_timezone.configure(anchor='w')
        self.LBL_timezone.configure(background="#d9d9d9")
        self.LBL_timezone.configure(compound='left')
        self.LBL_timezone.configure(disabledforeground="#a3a3a3")
        self.LBL_timezone.configure(font="-family {Comic Sans MS} -size 12")
        self.LBL_timezone.configure(foreground="#000000")
        self.LBL_timezone.configure(highlightbackground="#d9d9d9")
        self.LBL_timezone.configure(highlightcolor="black")
        self.LBL_timezone.configure(text='''Timezone : GMT''')
        self.timezone = ttk.Entry(self.BirthData)
        self.timezone.place(relx=0.553, rely=0.786, relheight=0.085
                , relwidth=0.136, bordermode='ignore')
        self.timezone.configure(font="-family {Gadugi} -size 12")
        self.timezone.configure(takefocus="")
        self.timezone.configure(cursor="ibeam")
        self.timezone_tooltip = \
        ToolTip(self.timezone, '''In hours with respect to GMT. for example if its GMT + 5hr 30 min then enter +5.5''')

        self.btnFetchUserDetails = tk.Button(self.BirthData)
        self.btnFetchUserDetails.place(relx=0.654, rely=0.092, height=33
                , width=186, bordermode='ignore')
        self.btnFetchUserDetails.configure(activebackground="beige")
        self.btnFetchUserDetails.configure(activeforeground="black")
        self.btnFetchUserDetails.configure(background="#ff5bff")
        self.btnFetchUserDetails.configure(compound='left')
        self.btnFetchUserDetails.configure(disabledforeground="#a3a3a3")
        self.btnFetchUserDetails.configure(font="-family {Rockwell} -size 12")
        self.btnFetchUserDetails.configure(foreground="#000000")
        self.btnFetchUserDetails.configure(highlightbackground="#d9d9d9")
        self.btnFetchUserDetails.configure(highlightcolor="black")
        self.btnFetchUserDetails.configure(pady="0")
        self.btnFetchUserDetails.configure(text='''Fetch User Details''')
        self.btnFetchUserDetails_tooltip = \
        ToolTip(self.btnFetchUserDetails, '''Fetches User details if exists in database''')

        self.btnFetchPlaceDetails = tk.Button(self.BirthData)
        self.btnFetchPlaceDetails.place(relx=0.703, rely=0.492, height=33
                , width=166, bordermode='ignore')
        self.btnFetchPlaceDetails.configure(activebackground="#14b8b8")
        self.btnFetchPlaceDetails.configure(activeforeground="#c10b38")
        self.btnFetchPlaceDetails.configure(background="#6b36f5")
        self.btnFetchPlaceDetails.configure(compound='left')
        self.btnFetchPlaceDetails.configure(disabledforeground="#a3a3a3")
        self.btnFetchPlaceDetails.configure(font="-family {MesloLGSDZ NF} -size 12")
        self.btnFetchPlaceDetails.configure(foreground="#dfdf00")
        self.btnFetchPlaceDetails.configure(highlightbackground="#d9d9d9")
        self.btnFetchPlaceDetails.configure(highlightcolor="black")
        self.btnFetchPlaceDetails.configure(pady="0")
        self.btnFetchPlaceDetails.configure(text='''Fetch Place''')
        self.btnSubmitUserDetails = tk.Button(self.BirthData)
        self.btnSubmitUserDetails.place(relx=0.703, rely=0.678, height=63
                , width=156, bordermode='ignore')
        self.btnSubmitUserDetails.configure(activebackground="#2cdd22")
        self.btnSubmitUserDetails.configure(activeforeground="black")
        self.btnSubmitUserDetails.configure(background="#ffff00")
        self.btnSubmitUserDetails.configure(compound='left')
        self.btnSubmitUserDetails.configure(disabledforeground="#a3a3a3")
        self.btnSubmitUserDetails.configure(font="-family {HelveticaNeueLT Std} -size 13 -weight bold")
        self.btnSubmitUserDetails.configure(foreground="#000000")
        self.btnSubmitUserDetails.configure(highlightbackground="#d9d9d9")
        self.btnSubmitUserDetails.configure(highlightcolor="black")
        self.btnSubmitUserDetails.configure(pady="0")
        self.btnSubmitUserDetails.configure(text='''Submit''')
        self.Place = tk.Entry(self.BirthData)
        self.Place.place(relx=0.234, rely=0.498, height=24, relwidth=0.464
                , bordermode='ignore')
        self.Place.configure(background="white")
        self.Place.configure(disabledforeground="#a3a3a3")
        self.Place.configure(font="-family {Century Schoolbook} -size 11")
        self.Place.configure(foreground="#000000")
        self.Place.configure(highlightbackground="#d9d9d9")
        self.Place.configure(highlightcolor="black")
        self.Place.configure(insertbackground="black")
        self.Place.configure(selectbackground="#c4c4c4")
        self.Place.configure(selectforeground="black")
        self.Place_tooltip = \
        ToolTip(self.Place, '''Enter birth place name''')

        self.btnClear = tk.Button(self.BirthData)
        self.btnClear.place(relx=0.034, rely=0.644, height=93, width=106
                , bordermode='ignore')
        self.btnClear.configure(activebackground="beige")
        self.btnClear.configure(activeforeground="black")
        self.btnClear.configure(background="#ef6334")
        self.btnClear.configure(compound='left')
        self.btnClear.configure(disabledforeground="#a3a3a3")
        self.btnClear.configure(font="-family {Palatino Linotype} -size 13 -weight bold")
        self.btnClear.configure(foreground="#ffffff")
        self.btnClear.configure(highlightbackground="#d9d9d9")
        self.btnClear.configure(highlightcolor="black")
        self.btnClear.configure(pady="0")
        self.btnClear.configure(text='''CLEAR''')
        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.TLabelframe1 = ttk.Labelframe(self.top)
        self.TLabelframe1.place(relx=0.552, rely=0.083, relheight=0.641
                , relwidth=0.43)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''User Data''')
        self.udLagna = tk.Label(self.TLabelframe1)
        self.udLagna.place(relx=0.021, rely=0.062, height=33, width=443
                , bordermode='ignore')
        self.udLagna.configure(activebackground="#f9f9f9")
        self.udLagna.configure(anchor='w')
        self.udLagna.configure(background="#d9d9d9")
        self.udLagna.configure(compound='left')
        self.udLagna.configure(disabledforeground="#a3a3a3")
        self.udLagna.configure(font="-family {Palatino Linotype} -size 12")
        self.udLagna.configure(foreground="#000000")
        self.udLagna.configure(highlightbackground="#d9d9d9")
        self.udLagna.configure(highlightcolor="black")
        self.udLagna.configure(text='''Lagna :''')
        self.udLagnesh = tk.Label(self.TLabelframe1)
        self.udLagnesh.place(relx=0.021, rely=0.124, height=33, width=433
                , bordermode='ignore')
        self.udLagnesh.configure(anchor='w')
        self.udLagnesh.configure(background="#d9d9d9")
        self.udLagnesh.configure(compound='left')
        self.udLagnesh.configure(disabledforeground="#a3a3a3")
        self.udLagnesh.configure(font="-family {Palatino Linotype} -size 12")
        self.udLagnesh.configure(foreground="#000000")
        self.udLagnesh.configure(text='''Lagnesh :''')
        self.udRashi = tk.Label(self.TLabelframe1)
        self.udRashi.place(relx=0.021, rely=0.186, height=26, width=423
                , bordermode='ignore')
        self.udRashi.configure(anchor='w')
        self.udRashi.configure(background="#d9d9d9")
        self.udRashi.configure(compound='left')
        self.udRashi.configure(disabledforeground="#a3a3a3")
        self.udRashi.configure(font="-family {Palatino Linotype} -size 12")
        self.udRashi.configure(foreground="#000000")
        self.udRashi.configure(text='''Rashi :''')
        self.udNakshatra = tk.Label(self.TLabelframe1)
        self.udNakshatra.place(relx=0.021, rely=0.248, height=26, width=443
                , bordermode='ignore')
        self.udNakshatra.configure(anchor='w')
        self.udNakshatra.configure(background="#d9d9d9")
        self.udNakshatra.configure(compound='left')
        self.udNakshatra.configure(disabledforeground="#a3a3a3")
        self.udNakshatra.configure(font="-family {Palatino Linotype} -size 12")
        self.udNakshatra.configure(foreground="#000000")
        self.udNakshatra.configure(text='''Nakshatra :''')
        self.udNakshatraLord = tk.Label(self.TLabelframe1)
        self.udNakshatraLord.place(relx=0.021, rely=0.31, height=26, width=433
                , bordermode='ignore')
        self.udNakshatraLord.configure(anchor='w')
        self.udNakshatraLord.configure(background="#d9d9d9")
        self.udNakshatraLord.configure(compound='left')
        self.udNakshatraLord.configure(disabledforeground="#a3a3a3")
        self.udNakshatraLord.configure(font="-family {Palatino Linotype} -size 12")
        self.udNakshatraLord.configure(foreground="#000000")
        self.udNakshatraLord.configure(text='''NakshatraLord :''')
        self.udMaasa = tk.Label(self.TLabelframe1)
        self.udMaasa.place(relx=0.021, rely=0.372, height=26, width=443
                , bordermode='ignore')
        self.udMaasa.configure(anchor='w')
        self.udMaasa.configure(background="#d9d9d9")
        self.udMaasa.configure(compound='left')
        self.udMaasa.configure(disabledforeground="#a3a3a3")
        self.udMaasa.configure(font="-family {Palatino Linotype} -size 12")
        self.udMaasa.configure(foreground="#000000")
        self.udMaasa.configure(text='''Maasa :''')
        self.udTithi = tk.Label(self.TLabelframe1)
        self.udTithi.place(relx=0.021, rely=0.434, height=26, width=443
                , bordermode='ignore')
        self.udTithi.configure(anchor='w')
        self.udTithi.configure(background="#d9d9d9")
        self.udTithi.configure(compound='left')
        self.udTithi.configure(disabledforeground="#a3a3a3")
        self.udTithi.configure(font="-family {Palatino Linotype} -size 12")
        self.udTithi.configure(foreground="#000000")
        self.udTithi.configure(text='''Tithi :''')
        self.udVaara = tk.Label(self.TLabelframe1)
        self.udVaara.place(relx=0.021, rely=0.496, height=26, width=433
                , bordermode='ignore')
        self.udVaara.configure(anchor='w')
        self.udVaara.configure(background="#d9d9d9")
        self.udVaara.configure(compound='left')
        self.udVaara.configure(disabledforeground="#a3a3a3")
        self.udVaara.configure(font="-family {Palatino Linotype} -size 12")
        self.udVaara.configure(foreground="#000000")
        self.udVaara.configure(text='''Vaara :''')
        self.udYoga = tk.Label(self.TLabelframe1)
        self.udYoga.place(relx=0.021, rely=0.558, height=26, width=432
                , bordermode='ignore')
        self.udYoga.configure(anchor='w')
        self.udYoga.configure(background="#d9d9d9")
        self.udYoga.configure(compound='left')
        self.udYoga.configure(disabledforeground="#a3a3a3")
        self.udYoga.configure(font="-family {Palatino Linotype} -size 12")
        self.udYoga.configure(foreground="#000000")
        self.udYoga.configure(text='''Yoga :''')
        self.udKarana = tk.Label(self.TLabelframe1)
        self.udKarana.place(relx=0.021, rely=0.62, height=26, width=442
                , bordermode='ignore')
        self.udKarana.configure(anchor='w')
        self.udKarana.configure(background="#d9d9d9")
        self.udKarana.configure(compound='left')
        self.udKarana.configure(disabledforeground="#a3a3a3")
        self.udKarana.configure(font="-family {Palatino Linotype} -size 12")
        self.udKarana.configure(foreground="#000000")
        self.udKarana.configure(text='''Karana :''')
        self.udRutu = tk.Label(self.TLabelframe1)
        self.udRutu.place(relx=0.021, rely=0.682, height=26, width=432
                , bordermode='ignore')
        self.udRutu.configure(anchor='w')
        self.udRutu.configure(background="#d9d9d9")
        self.udRutu.configure(compound='left')
        self.udRutu.configure(disabledforeground="#a3a3a3")
        self.udRutu.configure(font="-family {Palatino Linotype} -size 12")
        self.udRutu.configure(foreground="#000000")
        self.udRutu.configure(text='''Rutu :''')
        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(relx=0.009, rely=0.49, relheight=0.497
                , relwidth=0.535)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="#000000")
        self.Labelframe1.configure(text='''Popup Widgets''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.btnD1 = tk.Button(self.Labelframe1)
        self.btnD1.place(relx=0.034, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD1.configure(activebackground="beige")
        self.btnD1.configure(activeforeground="black")
        self.btnD1.configure(background="#71deea")
        self.btnD1.configure(compound='left')
        self.btnD1.configure(disabledforeground="#a3a3a3")
        self.btnD1.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD1.configure(foreground="#ad1043")
        self.btnD1.configure(highlightbackground="#00ff40")
        self.btnD1.configure(highlightcolor="black")
        self.btnD1.configure(pady="0")
        self.btnD1.configure(text='''D1''')
        self.btnD1_tooltip = \
        ToolTip(self.btnD1, '''Lagna: Body, Physical Matters and all General Matters ''')

        self.btnD2 = tk.Button(self.Labelframe1)
        self.btnD2.place(relx=0.153, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD2.configure(activebackground="beige")
        self.btnD2.configure(activeforeground="black")
        self.btnD2.configure(background="#71deea")
        self.btnD2.configure(compound='left')
        self.btnD2.configure(disabledforeground="#a3a3a3")
        self.btnD2.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD2.configure(foreground="#ad1043")
        self.btnD2.configure(highlightbackground="#00ff40")
        self.btnD2.configure(highlightcolor="black")
        self.btnD2.configure(pady="0")
        self.btnD2.configure(text='''D2''')
        self.btnD2_tooltip = \
        ToolTip(self.btnD2, '''Hora: Wealth, Family''')

        self.btnD3 = tk.Button(self.Labelframe1)
        self.btnD3.place(relx=0.271, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD3.configure(activebackground="beige")
        self.btnD3.configure(activeforeground="black")
        self.btnD3.configure(background="#71deea")
        self.btnD3.configure(compound='left')
        self.btnD3.configure(disabledforeground="#a3a3a3")
        self.btnD3.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD3.configure(foreground="#ad1043")
        self.btnD3.configure(highlightbackground="#00ff40")
        self.btnD3.configure(highlightcolor="black")
        self.btnD3.configure(pady="0")
        self.btnD3.configure(text='''D3''')
        self.btnD3_tooltip = \
        ToolTip(self.btnD3, '''Drekkana: Siblings, Nature''')

        self.btnD4 = tk.Button(self.Labelframe1)
        self.btnD4.place(relx=0.39, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD4.configure(activebackground="beige")
        self.btnD4.configure(activeforeground="black")
        self.btnD4.configure(background="#71deea")
        self.btnD4.configure(compound='left')
        self.btnD4.configure(disabledforeground="#a3a3a3")
        self.btnD4.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD4.configure(foreground="#ad1043")
        self.btnD4.configure(highlightbackground="#00ff40")
        self.btnD4.configure(highlightcolor="black")
        self.btnD4.configure(pady="0")
        self.btnD4.configure(text='''D4''')
        self.btnD4_tooltip = \
        ToolTip(self.btnD4, '''Chaturthamsa: Fortune and Property ''')

        self.btnD7 = tk.Button(self.Labelframe1)
        self.btnD7.place(relx=0.508, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD7.configure(activebackground="beige")
        self.btnD7.configure(activeforeground="black")
        self.btnD7.configure(background="#71deea")
        self.btnD7.configure(compound='left')
        self.btnD7.configure(disabledforeground="#a3a3a3")
        self.btnD7.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD7.configure(foreground="#ad1043")
        self.btnD7.configure(highlightbackground="#00ff40")
        self.btnD7.configure(highlightcolor="black")
        self.btnD7.configure(pady="0")
        self.btnD7.configure(text='''D7''')
        self.btnD7_tooltip = \
        ToolTip(self.btnD7, '''Sapthamsa: Children/Progeny''')

        self.btnD9 = tk.Button(self.Labelframe1)
        self.btnD9.place(relx=0.627, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD9.configure(activebackground="beige")
        self.btnD9.configure(activeforeground="black")
        self.btnD9.configure(background="#71deea")
        self.btnD9.configure(compound='left')
        self.btnD9.configure(disabledforeground="#a3a3a3")
        self.btnD9.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD9.configure(foreground="#ad1043")
        self.btnD9.configure(highlightbackground="#00ff40")
        self.btnD9.configure(highlightcolor="black")
        self.btnD9.configure(pady="0")
        self.btnD9.configure(text='''D9''')
        self.btnD9_tooltip = \
        ToolTip(self.btnD9, '''Navamsa: Spouse, Dharma and Relationships and marriage''')

        self.btnD10 = tk.Button(self.Labelframe1)
        self.btnD10.place(relx=0.746, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD10.configure(activebackground="beige")
        self.btnD10.configure(activeforeground="black")
        self.btnD10.configure(background="#71deea")
        self.btnD10.configure(compound='left')
        self.btnD10.configure(disabledforeground="#a3a3a3")
        self.btnD10.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD10.configure(foreground="#ad1043")
        self.btnD10.configure(highlightbackground="#00ff40")
        self.btnD10.configure(highlightcolor="black")
        self.btnD10.configure(pady="0")
        self.btnD10.configure(text='''D10''')
        self.btnD10_tooltip = \
        ToolTip(self.btnD10, '''Dasamsa: Actions in Society, Profession''')

        self.btnD12 = tk.Button(self.Labelframe1)
        self.btnD12.place(relx=0.864, rely=0.08, height=43, width=66
                , bordermode='ignore')
        self.btnD12.configure(activebackground="beige")
        self.btnD12.configure(activeforeground="black")
        self.btnD12.configure(background="#71deea")
        self.btnD12.configure(compound='left')
        self.btnD12.configure(disabledforeground="#a3a3a3")
        self.btnD12.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD12.configure(foreground="#ad1043")
        self.btnD12.configure(highlightbackground="#00ff40")
        self.btnD12.configure(highlightcolor="black")
        self.btnD12.configure(pady="0")
        self.btnD12.configure(text='''D12''')
        self.btnD12_tooltip = \
        ToolTip(self.btnD12, '''Dwadasamsa:Parents (Paternal and Maternal Legacies) ''')

        self.btnD16 = tk.Button(self.Labelframe1)
        self.btnD16.place(relx=0.034, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD16.configure(activebackground="beige")
        self.btnD16.configure(activeforeground="black")
        self.btnD16.configure(background="#71deea")
        self.btnD16.configure(compound='left')
        self.btnD16.configure(disabledforeground="#a3a3a3")
        self.btnD16.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD16.configure(foreground="#ad1043")
        self.btnD16.configure(highlightbackground="#00ff40")
        self.btnD16.configure(highlightcolor="black")
        self.btnD16.configure(pady="0")
        self.btnD16.configure(text='''D16''')
        self.btnD16_tooltip = \
        ToolTip(self.btnD16, '''Shodasamsa: Vehicles, Travelling and Comforts ''')

        self.btnD20 = tk.Button(self.Labelframe1)
        self.btnD20.place(relx=0.153, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD20.configure(activebackground="beige")
        self.btnD20.configure(activeforeground="black")
        self.btnD20.configure(background="#71deea")
        self.btnD20.configure(compound='left')
        self.btnD20.configure(disabledforeground="#a3a3a3")
        self.btnD20.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD20.configure(foreground="#ad1043")
        self.btnD20.configure(highlightbackground="#00ff40")
        self.btnD20.configure(highlightcolor="black")
        self.btnD20.configure(pady="0")
        self.btnD20.configure(text='''D20''')
        self.btnD20_tooltip = \
        ToolTip(self.btnD20, '''Vimsamsa: Spiritual Pursuits ''')

        self.btnD24 = tk.Button(self.Labelframe1)
        self.btnD24.place(relx=0.271, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD24.configure(activebackground="beige")
        self.btnD24.configure(activeforeground="black")
        self.btnD24.configure(background="#71deea")
        self.btnD24.configure(compound='left')
        self.btnD24.configure(disabledforeground="#a3a3a3")
        self.btnD24.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD24.configure(foreground="#ad1043")
        self.btnD24.configure(highlightbackground="#00ff40")
        self.btnD24.configure(highlightcolor="black")
        self.btnD24.configure(pady="0")
        self.btnD24.configure(text='''D24''')
        self.btnD24_tooltip = \
        ToolTip(self.btnD24, '''Chaturvimsamsa: Education, Learning and Knowledge (Academic Achievements) ''')

        self.btnD27 = tk.Button(self.Labelframe1)
        self.btnD27.place(relx=0.39, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD27.configure(activebackground="beige")
        self.btnD27.configure(activeforeground="black")
        self.btnD27.configure(background="#71deea")
        self.btnD27.configure(compound='left')
        self.btnD27.configure(cursor="fleur")
        self.btnD27.configure(disabledforeground="#a3a3a3")
        self.btnD27.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD27.configure(foreground="#ad1043")
        self.btnD27.configure(highlightbackground="#00ff40")
        self.btnD27.configure(highlightcolor="black")
        self.btnD27.configure(pady="0")
        self.btnD27.configure(text='''D27''')
        self.btnD27_tooltip = \
        ToolTip(self.btnD27, '''Saptavimsamsa: Strengths and Weakness  ''')

        self.btnD30 = tk.Button(self.Labelframe1)
        self.btnD30.place(relx=0.508, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD30.configure(activebackground="beige")
        self.btnD30.configure(activeforeground="black")
        self.btnD30.configure(background="#71deea")
        self.btnD30.configure(compound='left')
        self.btnD30.configure(disabledforeground="#a3a3a3")
        self.btnD30.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD30.configure(foreground="#ad1043")
        self.btnD30.configure(highlightbackground="#00ff40")
        self.btnD30.configure(highlightcolor="black")
        self.btnD30.configure(pady="0")
        self.btnD30.configure(text='''D30''')
        self.btnD30_tooltip = \
        ToolTip(self.btnD30, '''Trimsamsa: Evils''')

        self.btnD40 = tk.Button(self.Labelframe1)
        self.btnD40.place(relx=0.627, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD40.configure(activebackground="beige")
        self.btnD40.configure(activeforeground="black")
        self.btnD40.configure(background="#71deea")
        self.btnD40.configure(compound='left')
        self.btnD40.configure(disabledforeground="#a3a3a3")
        self.btnD40.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD40.configure(foreground="#ad1043")
        self.btnD40.configure(highlightbackground="#00ff40")
        self.btnD40.configure(highlightcolor="black")
        self.btnD40.configure(pady="0")
        self.btnD40.configure(text='''D40''')
        self.btnD40_tooltip = \
        ToolTip(self.btnD40, '''Khavedamsa: auspicious and inauspicious effects in horoscope''')

        self.btnD45 = tk.Button(self.Labelframe1)
        self.btnD45.place(relx=0.746, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD45.configure(activebackground="beige")
        self.btnD45.configure(activeforeground="black")
        self.btnD45.configure(background="#71deea")
        self.btnD45.configure(compound='left')
        self.btnD45.configure(cursor="fleur")
        self.btnD45.configure(disabledforeground="#a3a3a3")
        self.btnD45.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD45.configure(foreground="#ad1043")
        self.btnD45.configure(highlightbackground="#00ff40")
        self.btnD45.configure(highlightcolor="black")
        self.btnD45.configure(pady="0")
        self.btnD45.configure(text='''D45''')
        self.btnD45_tooltip = \
        ToolTip(self.btnD45, '''Akshavedamsa: all general indications (character and conduct of the native) ''')

        self.btnD60 = tk.Button(self.Labelframe1)
        self.btnD60.place(relx=0.864, rely=0.213, height=43, width=66
                , bordermode='ignore')
        self.btnD60.configure(activebackground="beige")
        self.btnD60.configure(activeforeground="black")
        self.btnD60.configure(background="#71deea")
        self.btnD60.configure(compound='left')
        self.btnD60.configure(disabledforeground="#a3a3a3")
        self.btnD60.configure(font="-family {Rockwell} -size 15 -weight bold")
        self.btnD60.configure(foreground="#ad1043")
        self.btnD60.configure(highlightbackground="#00ff40")
        self.btnD60.configure(highlightcolor="black")
        self.btnD60.configure(pady="0")
        self.btnD60.configure(text='''D60''')
        self.btnD60_tooltip = \
        ToolTip(self.btnD60, '''Shashtiamsa: For all general indications (Past birth or Karma of the native) ''')

        #manual addition parts
        self.btnD1.configure(command=lambda: popup_window_D1("Shyam Bhat", 'images/Lagna_chart.png'))
        self.btnSubmitUserDetails.configure(command=lambda: FetchUserInputData_formBirthdata(self))
        self.btnFetchPlaceDetails.configure(command=lambda: FetchPlacedata_updateFormfields(self))
        self.btnFetchUserDetails.configure(command=lambda: FetchBirthdata_updateFormfields(self))
        self.btnClear.configure(command=lambda: ClearFormfields(self))
        self.cmbName.bind('<KeyRelease>', update_cmbbox)

from time import time, localtime, strftime
class ToolTip(tk.Toplevel):
    """ Provides a ToolTip widget for Tkinter. """
    def __init__(self, wdgt, msg=None, msgFunc=None, delay=0.5,
                 follow=True):
        self.wdgt = wdgt
        self.parent = self.wdgt.master
        tk.Toplevel.__init__(self, self.parent, bg='black', padx=1, pady=1)
        self.withdraw()
        self.overrideredirect(True)
        self.msgVar = tk.StringVar()
        if msg is None:
            self.msgVar.set('No message provided')
        else:
            self.msgVar.set(msg)
        self.msgFunc = msgFunc
        self.delay = delay
        self.follow = follow
        self.visible = 0
        self.lastMotion = 0
        self.msg = tk.Message(self, textvariable=self.msgVar, bg=_bgcolor,
                   fg=_fgcolor, font="TkDefaultFont",
                   aspect=1000)
        self.msg.grid()
        self.wdgt.bind('<Enter>', self.spawn, '+')
        self.wdgt.bind('<Leave>', self.hide, '+')
        self.wdgt.bind('<Motion>', self.move, '+')
    def spawn(self, event=None):
        self.visible = 1
        self.after(int(self.delay * 1000), self.show)
    def show(self):
        if self.visible == 1 and time() - self.lastMotion > self.delay:
            self.visible = 2
        if self.visible == 2:
            self.deiconify()
    def move(self, event):
        self.lastMotion = time()
        if self.follow is False:
            self.withdraw()
            self.visible = 1
        self.geometry('+%i+%i' % (event.x_root + 20, event.y_root - 10))
        try:
            self.msgVar.set(self.msgFunc())
        except:
            pass
        self.after(int(self.delay * 1000), self.show)
    def hide(self, event=None):
        self.visible = 0
        self.withdraw()
    def update(self, msg):
        self.msgVar.set(msg)
    def configure(self, **kwargs):
        backgroundset = False
        foregroundset = False
        # Get the current tooltip text just in case the user doesn't provide any.
        current_text = self.msgVar.get()
        # to clear the tooltip text, use the .update method
        if 'debug' in kwargs.keys():
            debug = kwargs.pop('debug', False)
            if debug:
                for key, value in kwargs.items():
                    print(f'key: {key} - value: {value}')
        if 'background' in kwargs.keys():
            background = kwargs.pop('background')
            backgroundset = True
        if 'bg' in kwargs.keys():
            background = kwargs.pop('bg')
            backgroundset = True
        if 'foreground' in kwargs.keys():
            foreground = kwargs.pop('foreground')
            foregroundset = True
        if 'fg' in kwargs.keys():
            foreground = kwargs.pop('fg')
            foregroundset = True

        fontd = kwargs.pop('font', None)
        if 'text' in kwargs.keys():
            text = kwargs.pop('text')
            if (text == '') or (text == "\n"):
                text = current_text
            else:
                self.msgVar.set(text)
        reliefd = kwargs.pop('relief', 'flat')
        justifyd = kwargs.pop('justify', 'left')
        padxd = kwargs.pop('padx', 1)
        padyd = kwargs.pop('pady', 1)
        borderwidthd = kwargs.pop('borderwidth', 2)
        wid = self.msg      # The message widget which is the actual tooltip
        if backgroundset:
            wid.config(bg=background)
        if foregroundset:
            wid.config(fg=foreground)
        wid.config(font=fontd)
        wid.config(borderwidth=borderwidthd)
        wid.config(relief=reliefd)
        wid.config(justify=justifyd)
        wid.config(padx=padxd)
        wid.config(pady=padyd)
#                   End of Class ToolTip

def start_up():
    jyotishyamgui_support.main()

if __name__ == '__main__':
    jyotishyamgui_support.main()




